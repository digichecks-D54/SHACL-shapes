@prefix beo: <https://pi.pauwel.be/voc/buildingelement#> . 

@prefix ex: <https://example.org#> . 

@prefix props: <https://w3id.org/props#> . 

@prefix schema: <https://schema.org/> . 

@prefix sh: <https://www.w3.org/ns/shacl#> . 

@prefix xsd: <https://www.w3.org/2001/XMLSchema#> . 

 

ex:stairFormula a sh:SPARQLFunction ;    #define a function 

sh:parameter [             #declare the first parameter 

sh:path ex:riser ;         #first parameter is the riser height 

sh:datatype xsd:double ;     #the riser is a decimal 

] ; 

sh:parameter [             #declare the second parameter 

sh:path ex:tread ;         #second parameter is the tread length 

sh:datatype xsd:double ;     #the tread is a decimal 

] ; 

sh:returnType xsd:double ;     #the returned value is a decimal 

 

#start a SPARQL select query 

sh:select “SELECT ((2 * $riser + $tread) AS ?result) WHERE {}”  

.  

 

ex:stairSlope 

    a sh:NodeShape ;             #apply the shape to a focus node 

    sh:targetClass beo:StairFlight ;    #target all ‘StairFlight’ nodes  

    sh:expression [ 

#the self-defined lessThan(a,b) will return True if a < b 

        ex:lessThan (  

            570             #first parameter (a) 

            [             #second parameter (b) 

                #refer to the stairFormula(riser, tread) function 

                ex:stairFormula (  

                    [sh:path (props:riserHeigthIfcStairFlight schema:value)] 

                    [sh:path (props:treadLengthIfcStairFlight schema:value)] 

                ) 

            ] 

        ) 

    ]  

. 